{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","visiblegoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","this","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAU,GAHd,4CAME,WAAU,IAAD,OACDC,EAjCH,SACLC,EADK,GAGJ,IADCF,EACF,EADEA,SAAUD,EACZ,EADYA,WAENI,EAAY,YAAOD,GAUzB,OARiB,IAAbF,GACFG,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG7B,IAAbN,GACFG,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGvCT,EACKI,EAAaM,UAGfN,EAegBO,CAAkBd,EAAiBe,KAAKb,OAC7D,EAAiCa,KAAKb,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpB,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAwB,IAAbZ,EACP,iBACA,0BACJc,QAAS,kBAAM,EAAKC,SAClB,CAAEf,SAAU,KANhB,iCAYA,wBACEa,KAAK,SACLD,UAAwB,IAAbZ,EACP,oBACA,6BACJc,QAAS,kBAAM,EAAKC,SAClB,CAAEf,SAAU,KANhB,4BAYA,wBACEa,KAAK,SACLD,UAAWb,EACP,oBACA,6BACJe,QAAS,kBACP,EAAKhB,MAAMC,WACP,EAAKgB,SAAS,CAAEhB,YAAY,IAC5B,EAAKgB,SAAS,CAAEhB,YAAY,KARpC,sBAcEA,GAA2B,IAAbC,IACd,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,EAAKC,SAAS,CAAEhB,YAAY,EAAOC,SAAU,KAJjD,sBAYJ,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAlEpC,GAAyBC,IAAMC,WCnD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef65e2e5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === 1) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === 2) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    const visiblegoods = getReorderedGoods(goodsFromServer, this.state);\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === 1\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={() => this.setState(\n              { sortType: 1 },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === 2\n              ? 'button is-success'\n              : 'button is-success is-light'}\n            onClick={() => this.setState(\n              { sortType: 2 },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={() => (\n              this.state.isReversed\n                ? this.setState({ isReversed: false })\n                : this.setState({ isReversed: true })\n            )}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== 0) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ isReversed: false, sortType: 0 });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visiblegoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}